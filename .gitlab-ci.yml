image: mcr.microsoft.com/playwright/java

stages:
  - test
  - report
  - verify

variables:
  accepted_rate:
    value: "95"
    description: "Accepted pass rate"
  testExecKey:
    description: "XRAY Test Execution Ticket ID"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  TESTNG_SUITE: "src/test/resources/testng"

.platform_job:
  tags:
    - platform

.generate_allure_report: &generate_allure_report
  after_script:
    - mkdir backup && cd backup || true
    - curl -v --location --output report.zip --request GET "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/jobs/artifacts/develop/download?job=pages&job_token=$CI_JOB_TOKEN" || true
    - (unzip report.zip) || true
    - cd ../
    - (cp -r backup/public/history/ public/allure-results/history) || true

.test_definition: &test_definition
  - echo "[Auto-Message] Start UI Test Cases execution"
  - mvn clean test -DsuiteXmlFile=src/test/resources/testng_suite_$CI_NODE_INDEX.xml -Dheadless=true
  - echo "[Auto-Message] UI Test Cases execution is done"


.collect_reports: &collect_reports
  - mkdir public
  - cp target/surefire-reports/testng-results.xml public/testng-results_suite_$CI_NODE_INDEX.xml
  - cp target/allure-results public

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - .m2/repository



tests:
  stage: test
  extends: .platform_job
  parallel: 2
  script:
    - *test_definition
  after_script:
    - *collect_reports
  artifacts:
    when: always
    paths:
      - target/surefire-reports
      - public
    expire_in: 1 week
    reports:
      junit:
        - $CI_PROJECT_DIR/target/surefire-reports/junitreports/TEST-*.xml
  only:
    - develop

merge_test_results:
  stage: report
  extends: .platform_job
  needs: [tests]
  before_script:
    - apt-get update -y && apt-get install -y xmlstarlet  
  script:
    - 'echo "Merging test results..."'
    - ls
    - pwd
    - cd $CI_PROJECT_DIR/src/test/resources/
    - ls
    - pwd
    - chmod +x merge-testng-results.sh
    - $CI_PROJECT_DIR/src/test/resources/merge-testng-results.sh

    # - find . -path "*/target/surefire-reports/*.xml" -exec cp {} merged-test-results \;
    # - find . -path "*/target/allure-results/*" -exec cp {} merged-test-results \;
    # # - cp */target/surefire-reports/*.xml merged-test-results
    # - cp */target/allure-results/* merged-test-results
  artifacts:
    paths:
      - public
  when: always

Xray_report:
  stage: report
  needs: [merge_test_results]
  extends: .platform_job
  script:
    - |
      if [ -n "$testExecKey" ]; then
        echo "[Auto-Message] Upload test result to Xray..."
        export token=$(curl -H "Content-Type: application/json" -X POST --data "{ \"client_id\": \"$client_id\",\"client_secret\": \"$client_secret\" }" https://xray.cloud.getxray.app/api/v2/authenticate| tr -d '"')
        echo $token
        curl -v -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $token" --data @"$CI_PROJECT_DIR/public/testng-results.xml" "https://xray.cloud.getxray.app/api/v2/import/execution/testng?projectKey=PLATFORM&testExecKey=$testExecKey"
        echo "[Auto-Message] Upload test resul is done"
      fi
  artifacts:
    when: always
    expire_in: 1 week
    paths:
      - public
  only:
    - develop

pages:
  stage: report
  extends: .platform_job
  when: always
  needs: [merge_test_results]
  script:
    - echo "publish allure report to gitlab pages"
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - develop

verify:
  stage: verify
  needs: [merge_test_results]
  extends: .platform_job
  before_script:
   - apt-get update -y && apt-get install -y xmlstarlet
  script:
    - failed=$(xmlstarlet sel -t -v "/testng-results/@failed" $CI_PROJECT_DIR/public/testng-results.xml)
    - passed=$(xmlstarlet sel -t -v "/testng-results/@passed" $CI_PROJECT_DIR/public/testng-results.xml)
    # - total=$(xmlstarlet sel -t -v "/testng-results/@total" $CI_PROJECT_DIR/public/testng-results.xml)
    - total=$((passed+failed))
    - pass_rate=$((passed*100/total))
    - echo "[Auto-Message] accepted rate is $accepted_rate , Pass rate is $pass_rate , Total TC is $total , Pass TC is $pass"
    - if [ $pass_rate -lt $accepted_rate ]; then echo "[Auto-Message] Failed UI Tests run below accepted pass rate"; exit 1; else echo "[Auto-Message] Success UI Tests run within accepted pass rate"; fi
  only:
    - develop
